# Chip8 is a virtual machine designed in 1977 for programming video games.
# Octo is a high level assembler, disassembler and simulator for Chip8.
# Click 'Run' and then press ASWD to move the sprite around the screen.
# Click the Octo logo for source, documentation and examples.

# TOOD
# Ball routine
# fix Fill routine bounary cases
# Line routines
# delay
# better use of load/save

# NORMAL SET
:alias px v0
:alias py v1
:alias top v2
:alias left v3
:alias bottom v4
:alias right v5
:alias bx v6
:alias by v7
:alias bdx v8
:alias bdy v9

# FILL SET
:alias fx v0
:alias fy v1

# temp things
:alias inkey vb
:alias dotwidth vc
:alias tempneg vd
:alias tempdim ve

 
:macro fill markbound marknew mark {
  # turn of crosshairs
	i := dot
	sprite px top 1
	sprite left py 1
  i := 0x500
	save v5
  markbound := mark
	runfill
	i := 0x500
	load v5
	marknew := mark
	i := dot
	sprite px top 1
	sprite left py 1
}
	

: main
  px := 3
	py := 3
	bx := 10
	by := 10
	bdx := 1
	bdy := 1
	top := 0
	bottom := 32
	left := 0
	right := 64
	
	i := dot
	
	sprite px top 1
	sprite left py 1
	#sprite bx by 1
	loop
	  i := dot
		inkey := 5 if inkey key then moveup
	  inkey := 8 if inkey key then movedown
		
	  inkey := 7 if inkey key then moveleft
		inkey := 9 if inkey key then moveright
		
		inkey := 4 if inkey key begin fill left right px end
		inkey := 6 if inkey key begin fill top bottom py end
		inkey := 0xA if inkey key begin fill right left px end
		inkey := 0xB if inkey key begin fill bottom top py end
		
		inkey := 1 if inkey key begin
		  i := dot
		end
		
		#vf := delay
		#if vf == 0 then moveball
	
		
	again

: moveball
  sprite bx by 1
	tempneg := 255
	bx += bdx
	if bx == right then bdx =- tempneg
	if bx == left then bdx =- tempneg
	by += bdy
	if by == bottom then bdy =- tempneg
	if by == top then bdy =- tempneg
	
	sprite bx by 1
  vf := 1
	delay := vf
	return
	
: moveup
sprite left py 1
if py == top begin py := bottom else py -= 1
end
sprite left py 1
return

: movedown
sprite left py 1
if py == bottom begin py := top else py += 1 end
sprite left py 1
return
			
: moveleft
sprite px top 1
if px == left begin px := right else px -= 1 end
sprite px top 1
return

: moveright
sprite px top 1
if px == right begin px := left else px += 1 end
sprite px top 1
return

: runfill
  fx := left
	fy := top
  loop	
		dotwidth := right
		dotwidth -= fx
		
		if dotwidth > 8 then dotwidth := 8
		
		i := beforedots
		i += dotwidth
    
		sprite fx fy 1
		
		fy += 1
		if fy >= bottom begin
		  fx += dotwidth
			fy := top
		end
		
		if fx >= right begin 
		  i := dot
			return
		end

  again
	
	
: beforedots
 0xFF
: dot
 0x80 
: dot2
 0xC0 
: dot3
 0xE0
: dot4
 0xF0
: dot5
 0xF8
: dot6
 0xFC
: dot7
 0xFE
: dot8
 0xFF
